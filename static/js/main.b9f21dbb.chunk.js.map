{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["addContact","createAction","deleteContact","changeFilter","items","createReducer","id","name","number","actions","state","payload","filter","_","combineReducers","store","configureStore","reducer","contacts","contactsReducers","ContactForm","nameInputId","shortid","generate","numberInputId","handleChange","evt","target","value","setState","findByName","contactName","props","some","handleSubmit","preventDefault","alert","onAdd","reset","onSubmit","this","type","onChange","pattern","title","required","Component","connect","dispatch","contact","onChangeFilter","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","onDelete","contactId","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f21dbb.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/add\");\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\nexport const changeFilter = createAction(\"contacts/filter\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\nconst defaultItems = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(defaultItems, {\r\n  [actions.addContact]: (state, { payload }) => [...state, { ...payload }],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducers from \"./contacts/contacts-reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string))\r\n      .isRequired,\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  findByName = (contactName) => {\r\n    return this.props.contacts.some(({ name }) => name === contactName);\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    if (this.findByName(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.props.onAdd(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={this.nameInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={this.numberInputId}\r\n            required\r\n          />\r\n        </label>\r\n        <button>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAdd: (contact) => dispatch(actions.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChangeFilter} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  value: filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (evt) => dispatch(actions.changeFilter(evt.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst ContactList = ({ items, onDelete }) => (\r\n  <ol>\r\n    {items.map(({ id, name, number }) => (\r\n      <li key={shortid.generate()}>\r\n        {name}: {number}\r\n        <button onClick={() => onDelete(id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ol>\r\n);\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  items: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (contactId) => dispatch(actions.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nconst App = () => (\n  <>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}